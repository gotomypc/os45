//
// ladfilter.h
//
// LadParser

#if !defined(AFX_LADFILTER_H__B155E299_CD12_4499_BCAF_EBE9038CC379__INCLUDED_)
#define AFX_LADFILTER_H__B155E299_CD12_4499_BCAF_EBE9038CC379__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#ifndef __STREAMS__
#include <streams.h> // CBaseFilter
#endif

#include "ladparserpins.h"

#include <initguid.h>    // declares DEFINE_GUID to declare an EXTERN_C const.

// Our GUID. Generated by the wizard to be unique.
// {67cd5cef-e69b-43f2-ac36-87441e8823e2}
DEFINE_GUID(CLSID_LadFilter,
            0x67cd5cef, 0xe69b, 0x43f2, 0xac, 0x36, 0x87, 0x44, 0x1e, 0x88, 0x23, 0xe2);

// {B3BD2A0A-ADB9-42bd-8C39-5C9175C39015}
static const GUID IID_ILadParser = 
{ 0xb3bd2a0a, 0xadb9, 0x42bd, { 0x8c, 0x39, 0x5c, 0x91, 0x75, 0xc3, 0x90, 0x15 } };

interface ILadParser : public IUnknown
{
   virtual HRESULT QueryLadInfo(char *szLadInfo, int *nCount) = 0;
   virtual HRESULT QueryLadKey(BYTE *bLadKey) = 0;
};

//
// Cladfilter
//
class CLadParser : public CBaseFilter, public ILadParser
{
   friend class CLadParserInputPin;
   friend class CLadParserOutputPin;
   friend class COutputPinAsyncReader;
public:
   
   // filter object registration information
   static const AMOVIESETUP_FILTER sudLadFilter;
   static const AMOVIESETUP_MEDIATYPE sudLadInputTypes[];
   static const AMOVIESETUP_MEDIATYPE sudLadOutputTypes[];
   static const AMOVIESETUP_PIN    sudLadPins[];
   
   // called to create the COM filter oject
   static CUnknown *WINAPI CreateInstance(LPUNKNOWN punk, HRESULT *phr);

   virtual ~CLadParser();

   DECLARE_IUNKNOWN;

   virtual STDMETHODIMP NonDelegatingQueryInterface(REFIID riid, void **ppv);

   virtual HRESULT QueryLadInfo(char *szLadInfo, int *nCount);
   virtual HRESULT QueryLadKey(BYTE *bLadKey);
private:
   
   // Constructor - just calls the base class constructor
   CLadParser(TCHAR *tszName, LPUNKNOWN punk, HRESULT *phr);
   
   // return the number of pins this filter has
   virtual int           GetPinCount();
   
   // pointer to a pin.
   virtual CBasePin* GetPin(int n);
   // use to serialize access to filter interface methods.
   CCritSec m_FilterLock;
   
   // CBaseFilter derived objects cannot be copied
   CLadParser(const CLadParser&);
   CLadParser& operator=(const CLadParser&);
   
   CLadParserInputPin  *m_pInputPin;
   CLadParserOutputPin *m_pOutputPin;

   int m_addRefs;
   int m_releaseRefs;
};

#endif // !defined(AFX_LADFILTER_H__B155E299_CD12_4499_BCAF_EBE9038CC379__INCLUDED_)

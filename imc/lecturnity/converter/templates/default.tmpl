<!-- LECTURNITY version 1.6.1 -->

<html>
  <head>
    <title>%AUTHOR%: %TITLE%</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <meta name="author" content="%AUTHOR%">
    <meta name="keywords" content="%KEYWORDS%">

    <script language="JavaScript">
    <!--
    // initialize a variable to test for JavaScript 1.1.
    // which is necessary for the window.location.replace method
    var javascriptVersion1_1 = false;
    // -->
    </script>
    
    <script language="JavaScript1.1">
    <!--
    javascriptVersion1_1 = true;
    // -->
    </script>

    <script language="JavaScript">
    <!--
    // PlugIn Detection 
        
    // initialize global variables
    var detectableWithVB = false;
    var pluginFound = false;
    
    
    function goURL(daURL)
    {
      // if the browser can do it, use replace to preserve back button
      if(javascriptVersion1_1)
      {
        window.location.replace(daURL);
      }
      else
      {
        window.location = daURL;
      }
      return;
    }
    
    function redirectCheck(pluginFound, redirectURL, redirectIfFound)
    {
      // check for redirection
      if( redirectURL && ((pluginFound && redirectIfFound) || 
        (!pluginFound && !redirectIfFound)) )
      {
        // go away
        goURL(redirectURL);
        return pluginFound;
      }
      else
      {
        // stay here and return result of plugin detection
        return pluginFound;
      }	
    }
    
    function canDetectPlugins()
    {
      if( detectableWithVB || (navigator.plugins && navigator.plugins.length > 0) )
      {
        return true;
      }
      else
      {
        return false;
      }
    }
    
    function detectReal(redirectURL, redirectIfFound)
    {
      pluginFound = detectPlugin('RealPlayer');
      // if not found, try to detect with VisualBasic
      if(!pluginFound && detectableWithVB)
      {
        pluginFound = (detectActiveXControl('rmocx.RealPlayer G2 Control') ||
                       detectActiveXControl('RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)') ||
                       detectActiveXControl('RealVideo.RealVideo(tm) ActiveX Control (32-bit)'));
      }
      return redirectCheck(pluginFound, redirectURL, redirectIfFound);
    }
    
    function detectWindowsMedia(redirectURL, redirectIfFound)
    {
      pluginFound = detectPlugin('Windows Media');
      // if not found, try to detect with VisualBasic
      if(!pluginFound && detectableWithVB)
      {
        pluginFound = detectActiveXControl('MediaPlayer.MediaPlayer.1');
      }
      return redirectCheck(pluginFound, redirectURL, redirectIfFound);
    }
    
    function detectPlugin()
    {
      // allow for multiple checks in a single pass
      var daPlugins = detectPlugin.arguments;
      // consider pluginFound to be false until proven true
      var pluginFound = false;
      // if plugins array is there and not fake
      if (navigator.plugins && navigator.plugins.length > 0)
      {
        var pluginsArrayLength = navigator.plugins.length;
        // for each plugin...
        for (pluginsArrayCounter=0; pluginsArrayCounter < pluginsArrayLength; pluginsArrayCounter++ )
        {
          // loop through all desired names and check each against the current plugin name
          var numFound = 0;
          for(namesCounter=0; namesCounter < daPlugins.length; namesCounter++)
          {
            // if desired plugin name is found in either plugin name or description
            if( (navigator.plugins[pluginsArrayCounter].name.indexOf(daPlugins[namesCounter]) >= 0) || 
                (navigator.plugins[pluginsArrayCounter].description.indexOf(daPlugins[namesCounter]) >= 0) )
            {
              // this name was found
              numFound++;
            }
          }
          // now that we have checked all the required names against this one plugin,
          // if the number we found matches the total number provided then we were successful
          if(numFound == daPlugins.length)
          {
            pluginFound = true;
            // if we've found the plugin, we can stop looking through at the rest of the plugins
            break;
          }
        }
      }
      return pluginFound;
    } // detectPlugin
    
    
    // Here we write out the VBScript block for MSIE Windows
    if ((navigator.userAgent.indexOf('MSIE') != -1) && (navigator.userAgent.indexOf('Win') != -1))
    {
      document.writeln('<script language="VBscript">');
    
      document.writeln('\'do a one-time test for a version of VBScript that can handle this code');
      document.writeln('detectableWithVB = False');
      document.writeln('If ScriptEngineMajorVersion >= 2 then');
      document.writeln('  detectableWithVB = True');
        document.writeln('End If');
    
      document.writeln('\'this next function will detect most plugins');
      document.writeln('Function detectActiveXControl(activeXControlName)');
      document.writeln('  on error resume next');
      document.writeln('  detectActiveXControl = False');
      document.writeln('  If detectableWithVB Then');
      document.writeln('     detectActiveXControl = IsObject(CreateObject(activeXControlName))');
      document.writeln('  End If');
      document.writeln('End Function');
    
      document.writeln('\'and the following function handles QuickTime');
      document.writeln('Function detectQuickTimeActiveXControl()');
      document.writeln('  on error resume next');
      document.writeln('  detectQuickTimeActiveXControl = False');
      document.writeln('  If detectableWithVB Then');
      document.writeln('    detectQuickTimeActiveXControl = False');
      document.writeln('    hasQuickTimeChecker = false');
      document.writeln('    Set hasQuickTimeChecker = CreateObject("QuickTimeCheckObject.QuickTimeCheck.1")');
      document.writeln('    If IsObject(hasQuickTimeChecker) Then');
      document.writeln('      If hasQuickTimeChecker.IsQuickTimeAvailable(0) Then ');
      document.writeln('        detectQuickTimeActiveXControl = True');
      document.writeln('      End If');
      document.writeln('    End If');
      document.writeln('  End If');
      document.writeln('End Function');
    
      document.writeln('</scr' + 'ipt>');
    }
    // -->
    </script>

    <script type="text/javascript">
    <!--
    if (parent != window) 
    {
      parent.location = window.location;
    }
    
    function doLoadVF()
    {
      // PlugIn detection
      if (canDetectPlugins())
      {
        if (!%DETECT_RM_WM%)
          alert("%PLUGIN_RM_WM_NOT_DETECTED%");
      }
      else
        alert("%PLUGIN_CANT_BE_DETECTED%");
      
      // Netscape 4.x only
      if (document.layers)
      {
        //window.resizeTo(%BROWSER_WIDTH_NS4%, %BROWSER_HEIGHT_NS4%);
      }
      
      // Internet Explorer only
      if (document.all)
      {
        //window.resizeTo(%BROWSER_WIDTH_IE4%, %BROWSER_HEIGHT_IE4%);

        if (top.indexframe && top.indexframe.document.all.indexthumbs)
        {
          var v1 = top.indexframe.document.body.scrollHeight;
          var v2 = top.indexframe.document.body.clientHeight;
          if((v1 - v2) > 0)
            top.indexframe.document.all.indexthumbs.height = top.indexframe.document.body.clientHeight-1;
        }
        else
          setTimeout("doLoadVF()", 66);
      }
    }
    
    function doUnloadVF()
    {
      // close (netscape) popups
      // OnUnload in the frame itself isn't called
      if (top.videoframe)
        top.videoframe.closePopups();

      // Internet Explorer only
      if (document.all)
      {
        setTimeout("window.resizeBy(1,1)", 66);
      }
    }
    //-->
    </script>
  
  </head>

  <frameset rows="*,165" 
            border="1"
            frameborder="1"
            framespacing="4"
            topmargin="0"
            leftmargin="0"
            marginwidth="0"
            marginheight="0"
            bordercolor="%BORDER_COLOR%"
            onLoad="doLoadVF()" 
            onUnload="doUnloadVF()"> 
    <frameset cols="%VIDEOFRAME_WIDTH%,*" 
              border="1"
              frameborder="1"
              framespacing="4"
              topmargin="0"
              leftmargin="0"
              marginwidth="0"
              marginheight="0"
              bordercolor="%BORDER_COLOR%"> 
      <frameset rows="100,*"
                border="1"
                frameborder="1"
                framespacing="4"
                topmargin="0"
                leftmargin="0"
                marginwidth="0"
                marginheight="0"
                bordercolor="%BORDER_COLOR%"> 
        <frame name="headerframe" 
               src="%OUTPUT_NAME%_headerframe.html" 
               marginwidth="0" 
               marginheight="0" 
               scrolling="no" 
               frameborder="0">
        <frame name="videoframe" 
               src="%OUTPUT_NAME%_videoframe.html" 
               marginwidth="0" 
               marginheight="0" 
               scrolling="auto" 
               frameborder="0"%NO_RESIZE%> 
      </frameset> 
      <frame name="viewframe" 
             src="%OUTPUT_NAME%_viewframe.html" 
             marginwidth="0" 
             marginheight="0" 
             scrolling="auto" 
             frameborder="0"> 
    </frameset> 
    <frame name="indexframe" 
           src="%OUTPUT_NAME%_indexframe.html" 
           marginwidth="0" 
           marginheight="0" 
           scrolling="auto" 
           frameborder="0" >
    <noframes>
      <body bgcolor="#FFFFFF">
        <div align="left">
          <br>
          <h2>%NO_FRAMES1%</h2>
          <br>
          %NO_FRAMES2% <BR>
        </div>
      </body>
    </noframes>
  </frameset>
</html>
